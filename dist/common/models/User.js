"use strict";

var _mongoose = _interopRequireDefault(require("mongoose"));

var _bcrypt = _interopRequireDefault(require("bcrypt"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const UserSchema = new _mongoose.default.Schema({
  username: {
    type: String,
    unique: true,
    required: true,
    trim: true
  },
  password: {
    type: String,
    required: true
  }
}, {
  timestamps: true
});

UserSchema.statics.authenticate = async function (Username, password) {
  let user = await this.findOne({
    username: Username
  });

  if (user) {
    const match = await _bcrypt.default.compare(password, user.password);

    if (match === true) {
      if (user instanceof Error) return user;
      return user;
    }

    let error = new Error('Invalid credentials');
    error.code = 'INVALID_CREDS';
    return error;
  }
};

UserSchema.pre('save', async function (next) {
  if (this.password.length !== 60) {
    let hash = await _bcrypt.default.hash(this.password, 10).catch(err => err);

    if (hash instanceof Error) {
      return next(hash);
    }

    this.password = hash;
    return next();
  }

  return next();
});
module.exports.User = _mongoose.default.model('User', UserSchema);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NlcnZlci9jb21tb24vbW9kZWxzL1VzZXIuanMiXSwibmFtZXMiOlsiVXNlclNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwidXNlcm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwidW5pcXVlIiwicmVxdWlyZWQiLCJ0cmltIiwicGFzc3dvcmQiLCJ0aW1lc3RhbXBzIiwic3RhdGljcyIsImF1dGhlbnRpY2F0ZSIsIlVzZXJuYW1lIiwidXNlciIsImZpbmRPbmUiLCJtYXRjaCIsImJjcnlwdCIsImNvbXBhcmUiLCJFcnJvciIsImVycm9yIiwiY29kZSIsInByZSIsIm5leHQiLCJsZW5ndGgiLCJoYXNoIiwiY2F0Y2giLCJlcnIiLCJtb2R1bGUiLCJleHBvcnRzIiwiVXNlciIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHLElBQUlDLGtCQUFTQyxNQUFiLENBQW9CO0FBQ25DQyxFQUFBQSxRQUFRLEVBQUU7QUFDTkMsSUFBQUEsSUFBSSxFQUFFQyxNQURBO0FBRU5DLElBQUFBLE1BQU0sRUFBRSxJQUZGO0FBR05DLElBQUFBLFFBQVEsRUFBRSxJQUhKO0FBSU5DLElBQUFBLElBQUksRUFBRTtBQUpBLEdBRHlCO0FBT25DQyxFQUFBQSxRQUFRLEVBQUU7QUFDTkwsSUFBQUEsSUFBSSxFQUFFQyxNQURBO0FBRU5FLElBQUFBLFFBQVEsRUFBRTtBQUZKO0FBUHlCLENBQXBCLEVBV2hCO0FBQUVHLEVBQUFBLFVBQVUsRUFBRTtBQUFkLENBWGdCLENBQW5COztBQWFBVixVQUFVLENBQUNXLE9BQVgsQ0FBbUJDLFlBQW5CLEdBQWtDLGdCQUFnQkMsUUFBaEIsRUFBMEJKLFFBQTFCLEVBQW9DO0FBQ2xFLE1BQUlLLElBQUksR0FBRyxNQUFNLEtBQUtDLE9BQUwsQ0FBYTtBQUFFWixJQUFBQSxRQUFRLEVBQUVVO0FBQVosR0FBYixDQUFqQjs7QUFDQSxNQUFJQyxJQUFKLEVBQVU7QUFDTixVQUFNRSxLQUFLLEdBQUcsTUFBTUMsZ0JBQU9DLE9BQVAsQ0FBZVQsUUFBZixFQUF5QkssSUFBSSxDQUFDTCxRQUE5QixDQUFwQjs7QUFDQSxRQUFJTyxLQUFLLEtBQUssSUFBZCxFQUFvQjtBQUNoQixVQUFJRixJQUFJLFlBQVlLLEtBQXBCLEVBQTJCLE9BQU9MLElBQVA7QUFDM0IsYUFBT0EsSUFBUDtBQUNIOztBQUNELFFBQUlNLEtBQUssR0FBRyxJQUFJRCxLQUFKLENBQVUscUJBQVYsQ0FBWjtBQUNBQyxJQUFBQSxLQUFLLENBQUNDLElBQU4sR0FBYSxlQUFiO0FBQ0EsV0FBT0QsS0FBUDtBQUNIO0FBQ0osQ0FaRDs7QUFjQXBCLFVBQVUsQ0FBQ3NCLEdBQVgsQ0FBZSxNQUFmLEVBQXVCLGdCQUFnQkMsSUFBaEIsRUFBc0I7QUFDekMsTUFBSSxLQUFLZCxRQUFMLENBQWNlLE1BQWQsS0FBeUIsRUFBN0IsRUFBaUM7QUFDN0IsUUFBSUMsSUFBSSxHQUFHLE1BQU1SLGdCQUFPUSxJQUFQLENBQVksS0FBS2hCLFFBQWpCLEVBQTJCLEVBQTNCLEVBQStCaUIsS0FBL0IsQ0FBcUNDLEdBQUcsSUFBSUEsR0FBNUMsQ0FBakI7O0FBQ0EsUUFBSUYsSUFBSSxZQUFZTixLQUFwQixFQUEyQjtBQUN2QixhQUFPSSxJQUFJLENBQUNFLElBQUQsQ0FBWDtBQUNIOztBQUNELFNBQUtoQixRQUFMLEdBQWdCZ0IsSUFBaEI7QUFDQSxXQUFPRixJQUFJLEVBQVg7QUFDSDs7QUFDRCxTQUFPQSxJQUFJLEVBQVg7QUFDSCxDQVZEO0FBWUFLLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxJQUFmLEdBQXNCN0Isa0JBQVM4QixLQUFULENBQWUsTUFBZixFQUF1Qi9CLFVBQXZCLENBQXRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0JztcblxuY29uc3QgVXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIHVzZXJuYW1lOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgdW5pcXVlOiB0cnVlLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgdHJpbTogdHJ1ZSxcbiAgICB9LFxuICAgIHBhc3N3b3JkOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgfVxufSwgeyB0aW1lc3RhbXBzOiB0cnVlIH0pO1xuXG5Vc2VyU2NoZW1hLnN0YXRpY3MuYXV0aGVudGljYXRlID0gYXN5bmMgZnVuY3Rpb24gKFVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIGxldCB1c2VyID0gYXdhaXQgdGhpcy5maW5kT25lKHsgdXNlcm5hbWU6IFVzZXJuYW1lIH0pO1xuICAgIGlmICh1c2VyKSB7XG4gICAgICAgIGNvbnN0IG1hdGNoID0gYXdhaXQgYmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpO1xuICAgICAgICBpZiAobWF0Y2ggPT09IHRydWUpIHtcbiAgICAgICAgICAgIGlmICh1c2VyIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiB1c2VyO1xuICAgICAgICAgICAgcmV0dXJuIHVzZXI7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGVycm9yID0gbmV3IEVycm9yKCdJbnZhbGlkIGNyZWRlbnRpYWxzJyk7XG4gICAgICAgIGVycm9yLmNvZGUgPSAnSU5WQUxJRF9DUkVEUyc7XG4gICAgICAgIHJldHVybiBlcnJvcjtcbiAgICB9XG59O1xuXG5Vc2VyU2NoZW1hLnByZSgnc2F2ZScsIGFzeW5jIGZ1bmN0aW9uIChuZXh0KSB7XG4gICAgaWYgKHRoaXMucGFzc3dvcmQubGVuZ3RoICE9PSA2MCkge1xuICAgICAgICBsZXQgaGFzaCA9IGF3YWl0IGJjcnlwdC5oYXNoKHRoaXMucGFzc3dvcmQsIDEwKS5jYXRjaChlcnIgPT4gZXJyKTtcbiAgICAgICAgaWYgKGhhc2ggaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIG5leHQoaGFzaCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXNzd29yZCA9IGhhc2g7XG4gICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgfVxuICAgIHJldHVybiBuZXh0KCk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMuVXNlciA9IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgVXNlclNjaGVtYSk7XG4iXX0=