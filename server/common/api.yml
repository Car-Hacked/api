openapi: 3.0.1
info:
  title: hackmt-2020
  description: hackmt-2020 project
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Garages
    description: Simple garage endpoints
  - name: Specification
    description: The swagger API specification
paths:
  /garages:
    get:
      tags:
        - Garages
      description: Fetch all garages
      responses:
        200:
          description: Return the garage with the specified id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Garage'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Garages
      description: Create a new Garage
      requestBody:
        description: a garage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GarageBody'
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Garage'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /garages/{id}:
    get:
      tags:
        - Garages
      parameters:
        - name: id
          in: path
          description: The id of the garage to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the garage with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Garage'
        4XX:
          description: Garage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Garage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Garages
      parameters:
        - name: id
          in: path
          description: The id of the garage to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete the garage with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Garage'
        4XX:
          description: Garage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Garage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Garage:
      type: object
      properties:
        carsInLot:
          type: integer
          example: 3
        capacity:
          type: integer
          example: 500
    Error:
      type: object
      additionalProperties: true

    ExampleBody:
      title: example
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: no_stress

    GarageBody:
      title: garage
      required:
        - garageName
        - capacity
      type: object
      properties:
        garageName:
          type: string
          example: Parking-Lot 5
        carsInLot:
          type: integer
          example: 3
        capacity:
          type: integer
          example: 500
